@model DAL.OrdersWithFilters

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
}

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<section>
    @using (Html.BeginForm())
    {

        <div>
            From @Html.TextBox("From", Model.From, htmlAttributes: new { @class = "control-label col-md-2" }) |
            To @Html.TextBox("To", Model.To, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">
            @*Html.LabelFor(Model => Model.GetManagers(), "Manager", htmlAttributes: new { @class = "control-label col-md-2" })*@
            Managers
            <div class="col-md-10">
                @*Html.DropDownList("ManagerId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(Model.CurManagerId, Model.GetManagers(), "Select Manager")
                @*Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @*Html.LabelFor(Model => Model.GetCustomers(), "Customer", htmlAttributes: new { @class = "control-label col-md-2" })*@
            Customers
            <div class="col-md-10">
                @*Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(Model.CurCustomerId, Model.GetCustomers(), "Select Customer")
                @*Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @*Html.LabelFor(Model => Model.GetProducts(), "Product", htmlAttributes: new { @class = "control-label col-md-2" })*@
            Products
            <div class="col-md-10">
                @*Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(Model.CurProductId, Model.GetProducts(), "Select Product")
                @*Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

    }
</section>

<section>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
           @* Html.DisplayNameFor(model => model.PurchaseDate) *@
            Date
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.Amount)*@
            Amount
        </th>
        <th>
          @* Html.DisplayNameFor(model => model.CustomerSet.SecondName) *@
            Customer

        </th>
        <th>
           @* Html.DisplayNameFor(model => model.ManagerSet.SecondName) *@
            Manager
        </th>
        <th>
           @* Html.DisplayNameFor(model => model.ProductSet.Name) *@
            Product
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.GetOrders(Model.From, Model.To, Model.CurManagerId, Model.CurCustomerId, Model.CurProductId)
         ) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.PurchaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Amount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CustomerSet.SecondName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ManagerSet.SecondName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductSet.Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}
</table>
</section>